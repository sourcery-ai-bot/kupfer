#! /usr/bin/env python

from waflib import Options, Utils, Logs

def options(opt):
	opt.add_option('--no-update-mime',
			action='store_true',
			default=False,
			help='Do not update mime and desktop databases [Default:Update]')

def configure(conf):
	if not Options.options.no_update_mime:
		conf.env["AUXDATA_MIME"] = 1


def build(bld):
	# merge translations into the .desktop file
	# and set it up to be installed
	def install_desktop_file(desktop_subst_file):
		bld(
			features="intltool_in",
			podir="../po",
			flags=("-d", "-q", "-u", "-c"),
			source=f"{desktop_subst_file}.in",
			target=desktop_subst_file,
			install_path="${DATADIR}/applications",
			chmod=0o755,
		)


	install_desktop_file("kupfer.desktop")
	install_desktop_file("kupfer-exec.desktop")

	# install mimetype descriptions

	mimetypes_file = "kupfer-mimetypes.xml"
	bld(
		features="intltool_in",
		podir="../po",
		flags=("-x", "-q", "-u", "-c"),
		source=f"{mimetypes_file}.in",
		target=mimetypes_file,
		install_path="${DATADIR}/mime/packages/",
	)


	if bld.is_install and bld.env["AUXDATA_MIME"]:
		bld.exec_command(["update-mime-database",
				Utils.subst_vars("${DATADIR}/mime", bld.env)])
		bld.exec_command(["update-desktop-database",
				Utils.subst_vars("${DATADIR}/applications", bld.env)])

	icons_inst = bld.install_files("${DATADIR}/icons/hicolor/scalable/apps",
	                               "kupfer.svg")

	# Waf's "gnome" tool  -- def postinstall_icons():
	if icons_inst and bld.is_install:
		icon_dir = Utils.subst_vars('${DATADIR}/icons/hicolor', bld.env)
		if not Options.options.destdir:
			Logs.pprint('GREEN',"Updating Gtk icon cache.")
			command = f'gtk-update-icon-cache -q -f -t {icon_dir}'
			bld.exec_command(command)
		else:
			Logs.pprint('YELLOW','Icon cache not updated. After install, run this:')
			Logs.pprint('YELLOW', f'gtk-update-icon-cache -q -f -t {icon_dir}')
